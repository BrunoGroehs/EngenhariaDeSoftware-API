# @name createUser
### Usuários - Criar
POST http://localhost:3000/users
Content-Type: application/json

{
"name": "Fulano",
"email": "user@example.com",
"password": "password123"
}

###
@userID = 87

### Autenticação - Login
# @name getJWTToken
POST http://localhost:3000/auth/login
Content-Type: application/json

{
"email": "user@example.com",
"password": "password123"
}

### 
@authToken = {{getJWTToken.response.body.token}}

### Usuários - Obter
GET http://localhost:3000/users/{{userID}}
Authorization: Bearer {{authToken}}

### Usuários - Atualizar
PUT http://localhost:3000/users/{{userID}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
"name": "Fulano Atualizado",
"email": "fulano_atualizado@example.com"
}

### Tarefas - Criar
POST http://localhost:3000/tasks
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
"title": "Nova Tarefa",
"description": "Descrição da tarefa",
"assignedTo": 78
}

###
@taskID = 11
### Tarefas - Obter
GET http://localhost:3000/tasks/{{taskID}}
Authorization: Bearer {{authToken}}

### Tarefas - Listar por usuário
GET http://localhost:3000/tasks?assignedTo={{userID}}
Authorization: Bearer {{authToken}}

### Tarefas - Atualizar
PUT http://localhost:3000/tasks/{{taskID}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
"title": "Tarefa Atualizada",
"description": "Descrição atualizada",
"status": "concluida"
}

### Tarefas - Remover
DELETE http://localhost:3000/tasks/{{taskID}}
Authorization: Bearer {{authToken}}

### user - Remover Todos
DELETE http://localhost:3000/user/
Authorization: Bearer {{authToken}}

### Autenticação - Logout
POST http://localhost:3000/auth/logout
Authorization: Bearer {{authToken}}

### Usuários - Remover (soft delete)
DELETE http://localhost:3000/users/{{userID}}
Authorization: Bearer {{authToken}}